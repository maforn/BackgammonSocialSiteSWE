stages:
  - build
  - test
  - sonarqube-check
  - sonarqube-vulnerability-report

variables:
  DOCKER_DRIVER: overlay2

services:
  - name: docker:dind
    alias: docker

before_script:
  - apk add --no-cache docker-cli bash curl  # Install Docker CLI, Bash, and Curl
  # Install Docker Compose
  - LATEST_COMPOSE=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')  # Fetch the latest version tag
  - curl -L "https://github.com/docker/compose/releases/download/$LATEST_COMPOSE/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose  # Make Docker Compose executable
  - docker info  # Check if Docker daemon is running
  - docker-compose --version  # Verify Docker Compose installation

build:
  stage: build
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './server/'
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - docker-compose -f docker-compose.yml build --parallel

test:
  stage: test
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './server/'
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - docker-compose -f docker-compose.yml run client-test
    - docker-compose -f docker-compose.yml run test
  after_script:
    - docker-compose -f docker-compose.yml down
  artifacts:
    paths:
      - coverage/coverage.xml

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=SWE-team-3-backgammon-social-site&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check
